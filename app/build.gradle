apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.firebase.firebase-perf'

File keystoreProperties = rootProject.file("keystore.properties")
def props = new Properties()
if (keystoreProperties.exists()) {
    props.load(new FileInputStream(keystoreProperties))
} else {
    props['keystorefile'] = 'none';
}

android {
    dexOptions {
        jumboMode true
        javaMaxHeapSize "4g"
    }

    packagingOptions {
        exclude 'LICENSE'
        exclude 'README.md'
        exclude 'Other/'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
	    exclude 'META-INF/DEPENDENCIES'
    }

    compileSdkVersion parseSdkVersion(project.COMPILE_SDK)
    buildToolsVersion project.BUILD_TOOLS_VERSION

    defaultConfig {
        applicationId "com.klinker.android.twitter_l"
        targetSdkVersion parseSdkVersion(project.TARGET_SDK)
        minSdkVersion parseSdkVersion(project.MIN_SDK)
        versionCode System.getenv("BUILD_NUMBER") as Integer ?: Integer.parseInt(project.VERSION_CODE)
        versionName project.VERSION_NAME
        multiDexEnabled true
    }

    File keystore = new File(props['keystorefile'])
    if (keystore.exists()) {
        signingConfigs {
            release {
                storeFile keystore
                storePassword props['keystorepassword']
                keyAlias props['keyalias']
                keyPassword props['keypassword']
            }
            debug {
	            storeFile file("../Other/debug.keystore")
	            storePassword "android"
	            keyAlias "androiddebugkey"
	            keyPassword "android"
	        }
        }

        buildTypes {
            debug {
                signingConfig signingConfigs.debug
            }
            release {
                minifyEnabled true
                shrinkResources true
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
                signingConfig signingConfigs.release
            }
        }
    } else {
		signingConfigs {
            debug {
                storeFile file("../Other/debug.keystore")
                storePassword "android"
                keyAlias "androiddebugkey"
                keyPassword "android"
            }
        }
        buildTypes {
            debug {
                signingConfig signingConfigs.debug
            }
        }
    }

    sourceSets {
        androidTest {
            setRoot('src/test')
        }
    }

    lintOptions {
        ignore "InnerClasses"
        abortOnError false
    }

    aaptOptions {
        noCompress 'apk'
    }

    useLibrary 'org.apache.http.legacy'
}

dependencies {

    wearApp project(':wear')

    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:${KOTLIN_VERSION}"

    compile "com.android.support:appcompat-v7:${project.ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:cardview-v7:${project.ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:recyclerview-v7:${project.ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:support-emoji:${ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:design:${project.ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:customtabs:${project.ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:preference-v7:${project.ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:preference-v14:${project.ANDROID_SUPPORT_VERSION}"
    compile 'com.android.support:multidex:1.0.1'

    compile 'com.klinkerapps:link_builder:1.5.2'
    compile 'com.klinkerapps:peekview:1.2.3'
    compile 'com.klinkerapps:simple_videoview:1.2.4'
    compile 'com.klinkerapps:launcher-apis:1.1.0'
    compile 'com.klinkerapps:android-transcoder:1.0.1'
    compile 'com.klinkerapps:article_viewer-glide3:0.24.1'
    compile 'com.klinkerapps:drag-dismiss-activity:1.5.0'

    compile 'com.github.bumptech.glide:okhttp3-integration:1.4.0@aar'
    compile 'com.github.bumptech.glide:glide:3.7.0'

    compile 'com.firebase:firebase-jobdispatcher:0.6.0'

    compile 'com.afollestad:easyvideoplayer:0.3.0'
    compile 'com.github.halilozercan:BetterVideoPlayer:1.1.0'
    compile 'com.github.apl-devs:appintro:v4.2.0'
    compile 'de.timroes.android:EnhancedListView:0.3.2@aar'
    compile 'com.google.android.apps.dashclock:dashclock-api:2.0.0'
    compile 'de.hdodenhof:circleimageview:2.1.0'
    compile 'com.melnykov:floatingactionbutton:1.3.0'
    compile 'com.astuetz:pagerslidingtabstrip:1.0.1'
    compile 'com.flipboard:bottomsheet-core:1.5.0'
    compile 'com.yalantis:ucrop:1.5.0'
    compile 'me.leolin:ShortcutBadger:1.1.14@aar'
    compile 'com.github.ajalt.reprint:core:2.9.2@aar'
    compile 'com.github.ajalt.reprint:reprint_spass:2.9.2@aar'
    compile 'com.github.fiskurgit:ChipCloud:3.0.3'
    compile 'com.afollestad.material-dialogs:core:0.9.4.5'

    compile files('lib/YouTubeAndroidPlayerApi.jar') // version 1.2.2
    compile files('lib/twitter4j-fork.jar')
    compile files('lib/twitter4j-stream-fork.jar')
    compile(name: 'datetimepicker', ext: 'aar')
    compile(name: 'sectioned-recyclerview', ext: 'aar')
    compile(name: 'material-camera', ext: 'aar')

    compile project(':searchview')
    compile project(':shared_assets')
}

configurations.all {
    resolutionStrategy.eachDependency { DependencyResolveDetails details ->
        def requested = details.requested
        if (requested.group == 'com.android.support') {
            if (!requested.name.startsWith("multidex")) {
                details.useVersion ANDROID_SUPPORT_VERSION
            }
        }
    }
}

apply plugin: 'com.google.gms.google-services'
